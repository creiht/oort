syntax = "proto3";
package groupproto;

// Write and Delete intentionally use uniquely named ResponseMessages
// incase they ever change down the road.
service GroupStore {
    rpc Write(WriteRequest) returns (WriteResponse) {}
    rpc Lookup(LookupRequest) returns (LookupResponse) {}
    rpc LookupGroup(LookupGroupRequest) returns (LookupGroupResponse) {}
    rpc Read(ReadRequest) returns (ReadResponse) {}
    rpc Delete(DeleteRequest) returns (DeleteResponse) {}
}

message EmptyMsg {}

message WriteRequest {
    uint64 keyA = 1;
    uint64 keyB = 2;
    uint64 nameKeyA = 3;
    uint64 nameKeyB = 4;
    bytes  value = 5;
    int64  tsm = 6;
}

message LookupRequest {
    uint64 keyA = 1;
    uint64 keyB = 2;
    uint64 nameKeyA = 3;
    uint64 nameKeyB = 4;
    int64  tsm = 5;
}

message ReadRequest {
    uint64 keyA = 1;
    uint64 keyB = 2;
    uint64 nameKeyA = 3;
    uint64 nameKeyB = 4;
    int64  tsm = 5;
}

message DeleteRequest {
    uint64 keyA = 1;
    uint64 keyB = 2;
    uint64 nameKeyA = 3;
    uint64 nameKeyB = 4;
    int64  tsm = 5;
}

message LookupGroupRequest {
    uint64 a = 1;
    uint64 b = 2;
}

message WriteResponse {
    int64  tsm = 1;
    string err = 2;
}

message LookupResponse {
    int64  tsm = 1;
    uint32 length = 2;
    string err = 3;
}

message LookupGroupResponse {
    repeated LookupGroupItem items = 1;
}

message LookupGroupItem {
    uint64 nameKeyA = 1;
    uint64 nameKeyB = 2;
    uint64 timestampMicro = 3;
    uint32 length = 4;
}

message ReadResponse {
    int64  tsm = 1;
    bytes  value = 2;
    string err = 3;
}

message DeleteResponse {
    int64  tsm = 1;
    string err = 2;
}
